/*I have been able to create Constraint via breaking down the coursework
guidlines and specification my database, I have also looked into the Oracle 
website for help.
http://docs.oracle.com/cd/B19306_01/server.102/b14200/clauses002.htm */

/*Add constraints are shown below, as this does both adding and 
creating constraints within each table. I have referenced my work from
http://docs.oracle.com/javadb/10.8.2.2/ref/rrefsqlj13590.html*/

/*I was not able to constraint the link tables, as they provided a great detail
of contraining for the database. However, I was able to only add 4 sets of data
for the link tables and should add constaints like the ones shown below*/

/*I have complied the code shown below and the primary key has been added to
the table and is a constraint, as shown in the Tables Script. There is a 
message shown after compile, it states that there can only be on primary key
and the compiled code has already create a constraint to the table.*/
SELECT * FROM USER_CONSTRAINTS

ALTER TABLE MULTIPLEX   /* I was able to look at examples based on adding
Constraints online as well as at the lecture notes provided*/
ADD CONSTRAINT Mult_Id_PK
PRIMARY KEY (Mult_Id);  /*I was not able to find a foreign key for this table,
but managed to fix the constraints problem with the table*/

/*Channel Constraints added and created for Channel Table*/

ALTER TABLE CHANNEL     /*This time the FK from Channel Table is shown*/
ADD CONSTRAINT Mult_Id_PK
FOREIGN KEY (Mult_Id) REFERENCES MULTIPLEX; /*Primary key from Multiplex table*/

ALTER TABLE CHANNEL     /*When creating a Constraint, I need to have
a Primary Key, which is active as well as referencing to the foreign key*/
ADD CONSTRAINT Chan_ID_PK
PRIMARY KEY (Chan_ID);

/*Program Constraints added and created for the Program Table*/

ALTER TABLE PROGRAM     /*now the foreign key is active*/
ADD CONSTRAINT Chan_ID_FK
FOREIGN KEY (Chan_ID) REFERENCES CHANNEL;

ALTER TABLE PROGRAM /*Primary Key Constraint*/
ADD CONSTRAINT Prog_ID_PK
PRIMARY KEY (Prog_ID);

/*ADD/CREATE Constraint Episode does both 
for the Episode table when compiled*/

ALTER TABLE Episode
ADD CONSTRAINT Prog_ID_FK
foreign key (Prog_ID) references PROGRAM;

ALTER TABLE Episode
ADD CONSTRAINT Ep_ID_PK
primary key (Ep_ID);

/*Create/ADD constraint are compiled and 
shown in the Person Table*/

ALTER TABLE Person
ADD constraint Char_ID_FK
foreign key (Char_ID) REFERENCES Character;

ALTER TABLE Person
ADD CONSTRAINT Per_ID_PK
PRIMARY KEY (Per_ID);

/*ADD and Create Character Constraint, as
it has been compiled and added to the table
Character Table.*/

ALTER TABLE Character
ADD CONSTRAINT Char_ID_PK
PRIMARY KEY (Char_ID);

/*There is no Foreign Key assigned to The Character Tables but the Primary 
Key Constraint works, as I have compiled the statement to alter table*/

/*This does both ADD and Create Constraints for Season Table.
Note there is no foreign key used within this table, as 
I have compiled this constraint and it has create and added
this contraint to table, Same with other tables and constraints.*/

ALTER TABLE Season
ADD CONSTRAINT Sea_ID_PK
PRIMARY KEY (Sea_ID);

/*Now to create and add constraints to the linktables, I will use
the same process used above for this section. These would be Foreign
Key Constraints only*/

ALTER TABLE Directed_by
ADD CONSTRAINT Per_id
foreign key (Per_id) references Person;

/*I have compiled this constraint and it has worked, now the table
has been altered. However, I have added one constraint to this table,
like any others on this script*/

ALTER TABLE Role
ADD CONSTRAINT Char_id_fk
Foreign key (Char_id) references Character;

/*I have managed to reference the Foreign Key Char ID to 
the Character Table and is now being used as a constraint for this 
table*/

ALTER TABLE Time_Slot
ADD CONSTRAINT Start_time
Primary key (Start_time);

/*This time i've added a constraint and create a constraint with
Start time within the Time Slot table, also it is a Primary key not a
Foreign Key*/

ALTER TABLE Written_by
ADD CONSTRAINT Per_id_Unique
Unique(per_id);

/*I have create a unique constraint for this table, which has been referenced
http://www.techonthenet.com/oracle/unique.php and is now altered onto this
table.*/

/*Now to check constraints, previously they worked but yet again I was able
to create the check constraints again. On the tables, all of the check constaints
have been shown, this means I would need to fix and develop the same check
used within each table.*/

ALTER TABLE Channel
ADD CONSTRAINT Mult_ID
CHECK (Mult_ID Between 1 and 10);

/*I was able to check the constraint above and was successfully checked and 
shown on the Channel Table. I am able to the website attached to this comment
to reference my work on this section. 
http://www.techonthenet.com/oracle/check.php*/

ALTER TABLE Character
ADD CONSTRAINT Char_ID
CHECK (Char_ID Between 1 and 10);

/*I have just found out that I have created many checks with the constraints 
and have now needed to alter all constraint names within the tables also I was 
able to edit all of my constraints, as shown on this script and within each 
table */

ALTER TABLE Episode
ADD CONSTRAINT Ep_ID
CHECK (Ep_ID BETWEEN 1 and 5);

/*I was able to check if the ID is between 1 and 5 data sets, to check if
the ID is between the 1 and 5 based on the number assigned to this table.*/

ALTER TABLE Multiplex
ADD CONSTRAINT Mult_Id
CHECK (Mult_Id BETWEEN 1 and 10 );

/*There have been many checks made for this table, but the updated check that 
I have now implemented in the Program table is the Prog ID being assigned a 
number between 1 and 10*/

ALTER TABLE Program
ADD CONSTRAINT Prog_ID
CHECK (Prog_ID BETWEEN 1 and 10);

/*I was able to check the constraint Per ID, as it was a
constraint assigned within the Person Table.*/

ALTER TABLE Person
ADD CONSTRAINT Per_ID
CHECK (Per_ID between 1 and 10);

/*I was able to update all tables with the same synax and its 
simple enought to work and check all constraints within
each of the tables. Now I have added a check, which checks all
of the season ID's are between 1 and 10.*/


ALTER TABLE Season
ADD CONSTRAINT Sea_ID
CHECK (Sea_ID between 1 and 10);

/*I have now been able to check constraints with the link tables
and been able to add the unique key constraint with the same 
check constraints, I managed to use the same website for this section
http://www.techonthenet.com/oracle/unique.php, for Time Slot I've added time, 
so it constrains all of the times used below*/

ALTER TABLE Time_Slot
ADD CONSTRAINT Start_Time
CHECK(Start_Time Between '12.00' and '20.00');

/*I was not able to check constraints with the other tables, as the
foreign keys used within the tables are primary keys or used again
in other tables shown in the sections above. I was not able to use Trigger 
on this script but most of the tiggers were used in the Trigger Script rather
than this particular script, which caters for Adding and Checking Constaints
also some of the constraints were create on this script as well as in the Table
script.

Looking at the link tables, I have only tried to check if these tables can
be constrainted, but honestly these tables have limits and is less priority
rather than other tables shown in this script.*/


/* Now I need to drop the constraints and this would shown with different 
tables, this has been referenced from the website below
http://www.w3schools.com/sql/sql_foreignkey.asp */

ALTER TABLE CHANNEL
DROP CONSTRAINT Mult_Id_FK;
/*I was able to delete _PK at the end of Mult_ID and it 
automatically altered this table when compiled*/

ALTER TABLE Person
DROP CONSTRAINT Char_ID_FK;

ALTER TABLE Episode
DROP CONSTRAINT Prog_ID_FK;

/*Note that Tables Character and Season Tables do not have an
Foreign Keys but they do have Primary Keys, as these Drop Constraints are
shown below*/

/*Primary Constraint Drop, I have referenced some of this code from
http://www.w3schools.com/sql/sql_primarykey.asp*/

ALTER TABLE Episode
DROP CONSTRAINT Ep_Id;
/*This drop constraint worked for Episode Table by not implementinh
PK within the syntax and then running the code to alter the table.*/

ALTER TABLE CHANNEL
DROP CONSTRAINT Chan_Id; 

/*This has recognised that the constraint can be drop, but has dropped
already based on running the whole code to drop constraints.
Note, that it has recognised the Chan_Id as a constraint.*/

ALTER TABLE Program
DROP CONSTRAINT Prog_Id;

/*As this is a primary and drop constraint within the table,
I have been able to alter Program and once its ran again, a message
should show up (cannot drop constraint) because this constraint has
been drop once not twice.*/

ALTER TABLE Multiplex
DROP CONSTRAINT Mult_Id;

/*Just like in the Person Drop Constraint, I was able
to remove PK from the Statement and then run the code
to alter the table. Note that both Per_ID and Mult_Id
are constraints, which have been used in the Constraints
Script.*/

SELECT * FROM USER_CONSTRAINTS

ALTER TABLE Person
DROP CONSTRAINT Per_Id;

/*I have removed PK from Per_ID and the constraint
has automatically dropped and is also notified, as Primary
Key without inserting PK to the code above.*/

ALTER TABLE Character
DROP CONSTRAINT Char_ID;
/*I have removed PK from the Char_ID and then ran the
code, this has now dropped constraint on Character Table*/

ALTER TABLE Season
DROP CONSTRAINT Sea_ID;
/*This drop constraint work, as there is no foreign key, only
a primary key is used. Looking back at the Table Script Sea_ID is 
the Season_ID and its is shown when I added data to the table*/


/*Package for Program is a procedure used to create or remove the ID of Program
as well as beinga able to create a package called Program. This would include a 
cancelling the program (STAR TREK) or adding to the EPG. Thes Packages have 
both Cursors and Returns.*/

CREATE OR REPLACE PACKAGE Prog_pck
AS
Prog_not_found EXCEPTION;
Chan_lastupdated CONSTANT DATE(1,2):='2012-08-19';

CURSOR Prog_Genre_cur(SCI-FI IN VARCHAR(20)%TYPE
RETURN Genre%ROWTYPE;

PROCEDURE cancel_Prog(Prog_Title%TYPE);
BEGIN
SELECT * FROM Program WHERE Prog_Title IS 'STAR TREK';
RETURN
END Prog_pck;
/
SHOW ERRORS

CREATE OR REPLACE PACKAGE BODY Prog_Id
AS
CURSOR Prog_Genre_cur(SCI-FI IN VARCHAR(20)%TYPE) RETURN
Prog%ROWTYPE IS SELECT * FROM Program WHERE Prog_ID='SCIFI';

PROCEDURE cancel_Prog(Prog_Title STAR TREK) IS
BEGIN
SELECT * FROM Program where Prog_Genre = SCIFI;
RETURN
END cancel_Prog

END;
/

/*This the package code for Channel, as this would include Removing the program
from the list or adding the channel to EPG.It also shows an error within the
code, as this would be compiled with the whole program as well as the program 
shown above. The channel that is described is CBS, as expressed in the SQL CW
script. All packages used in this statement has a Cursor, which I have 
Referenced from http://www.techonthenet.com/oracle/cursors/declare.php
*/

CREATE OR REPLACE PACKAGE Chan_ID
AS
Chan_not_found EXCEPTION;
Chan_number CONSTANT NUMBER(1,10):=5;

CURSOR Chan_Description(p_Chan_lastupdated IN Chan.Chan_number%TYPE)
RETURN Chan%ROWTYPE;

PROCEDURE remove_Chan(p_Chan_number Chan.Chan_lastupdated%TYPE)IS
BEGIN
SELECT * FROM CHANNEL where Chan_number = 5;
END Chan_pck;
/
SHOW ERRORS

CREATE OR REPLACE BODY Chan_ID
AS
CURSOR Chan_number_cur(p_Chan_lastupdated IN Chan.Chan_number%TYPE) RETURN
Chan%ROWTYPE
IS SELECT * FROM Channel WHERE Chan_number =p_chan_number;

PROCEDURE remove_Chan(p_Chan_number NUMBER) IS
BEGIN

SET Chan_number To 5;

END Chan_ID

END Chan_pck;
/


/*This is an update procedure used for my packages or oone of the packages.
I have been able to update program table with a trigger shown above, I was able
to update triggers with the website shown on the previous link plus
looked at the lecture notes to find out how to update one table, which was
channel and it relates to the updating procedures shown on the coursework
specification.

To Update one of my programmes within a procedure, I managed to use the website
http://www.mkyong.com/oracle/oracle-stored-procedure-update-example/*/

Create or replace procedure updateProgram
( p_PROG_NAME IN PROG_TITLE%TYPE)

IS
BEGIN

UPDATE Program SET PROG_TITLE = p_PROG_NAME WHERE PROG_TITLE = PROG_TITLE;

COMMIT;

END updateProgram;

/

/*I will need to update and create one more procedure to check if it can change
DALLAS to one upper case D and lower case the other characters in the table*/

Create or replace procedure updateProgram
( p_DALLAS IN PROG_TITLE%TYPE)

IS
BEGIN

UPDATE Program SET PROG_TITLE = p_Dallas WHERE PROG_TITLE = DALLAS;

COMMIT;

END updateProgram;

/

/*It has successfully compiled and has shown some errors, as it should
update DALLAS to Dallas within the program table
I was also able to look at the website Oracle website about optamistic locking
, as this procedure uses the same locking technique used above but in more
detail. Note that is an Optimistic Lock, which is also referenced for the website.
http://asktom.oracle.com/pls/asktom/f?p=100:11:0::::P11_QUESTION_ID:22948373947565 */

/*All drop tables would need a CASCADE CONSTRAINT, as it removes
any data outside the database as well as not affecting data inserted in the
scrips- This was also referenced from the website below.
http://docs.oracle.com/cd/B19306_01/server.102/b14200/statements_9003.htm 
I was able to reduce the amount of brackets for the keywords and manage to use 
the brackets to higlight the values and this helped to create the Multiplex 
Table.*/

/*I have been able to constraint all primary keys within each table on my Tables
script.*/

DROP TABLE MULTIPLEX
CASCADE CONSTRAINTS;
CREATE TABLE MULTIPLEX
( 
  Mult_Id integer,  /* All ID's have an Integer Value*/
  Mult_Frequency NUMBER(1), /*There were problems with the number of frequency
  as I was able to resolve the problem with look at the website shown below
  http://ss64.com/ora/syntax-datatypes.html*/
  Mult_name VARCHAR(40),
  Mult_lastupdate DATE, /* without brackets reduces the amount of errors*/
  CONSTRAINT Mult_pk PRIMARY KEY (Mult_Id)
  );
  
/*Within the table below there were errors such as missing select keywords but
was able to resolve the problem by looking into it with great detail, as the 
website :
http://www.dreamincode.net/forums/topic/218374-sql-missing-select-keyword-error/

Also I was able to reduce the amount of brackets and allowing all of the brackets
to be linked to values instead of keywords used within my database.
Cascade Constraints references the unique and primary key within the table, as
it was also used in other tables within this script. I have referenced this from
http://docs.oracle.com/cd/B28359_01/server.111/b28286/statements_9003.htm */

DROP TABLE CHANNEL
CASCADE CONSTRAINTS;
CREATE TABLE CHANNEL
  (
    Chan_ID integer,	/*surrogate key for channel*/
    Chan_name CHAR(4), /*The Channel Name consist of 4 Characters*/
    Chan_number NUMBER(4),
    Chan_Description Char(6), /*character of 6 is assigned to Description 
    as a Value*/
    Mult_Id integer NOT NULL,  /*Foreign Key that is a primary within the
    Multiplex Table*/
    Chan_lastupdated DATE, /*last update for channel*/
    CONSTRAINT Chan_pk PRIMARY KEY (Chan_ID)
    );
    
    DROP TABLE Program
    CASCADE CONSTRAINTS;
    CREATE TABLE Program
    (
      Prog_ID integer,  /*surrogate key for programme*/
      Prog_Title VARCHAR(10), /*String of 10 words*/
      Prog_Genre VARCHAR(20),
      Prog_language VARCHAR(20) DEFAULT 'ENGLISH', 
      /*English Language Default- Resolving issue of Column Not Allowed with
      using an expression or adding quotes to English value to the language
      http://ora-00984.ora-code.com/*/
      Prog_Description Char(6), /*This can only be 6 characters rather than
      string because it's used to describe the program not using a String of 
      Chars to describe the program.*/
      Prog_HD VARCHAR(2),	/*Represented as Char, as used in Boolean*/
      Chan_ID integer NOT NULL,
      Prog_Type CHAR (7), 
      Prog_Made DATE NOT NULL,	/*Required for TV Programme*/
      Prog_REPEAT_PERIOD NUMBER(2),		/*repeat in 2 days*/
      Prog_lastupdated DATE,			/*last update for Programme*/
      CONSTRAINT Prog_pk PRIMARY KEY (Prog_ID) /*adding primary key within this
      table and managed to look the Tech on the Net website for help with 
      containing the primary key within the table above.
      http://www.techonthenet.com/oracle/unique.php*/
      );
      
  DROP TABLE Episode
  CASCADE CONSTRAINTS; 
  CREATE TABLE Episode
  (
    Episode_ID integer, /* Surrogate Key for Episode*/
    Episode_Season VARCHAR(5),
    Episode_Title VARCHAR(5), /*I have referenced this from
    http://www.imdb.co.uk/title/tt0060028/episodes?season=1*/
    Episode_Date DATE NOT NULL,
    Prog_ID Integer NOT NULL,
    CONSTRAINT Episode_pk PRIMARY KEY (Episode_ID)
  );
    
    DROP TABLE Season
    CASCADE CONSTRAINTS; 
    CREATE TABLE Season
  (
    Season_ID integer, /* Surrogate Key within Table*/
    Season_Number NUMBER(1),
    Season_Date Date NOT NULL,
    Season_lastupdated DATE, /*No value is needed as the date would be set 
    autoutmatically*/
    CONSTRAINT Season_pk PRIMARY KEY (Season_ID)
  );
  
  DROP TABLE Person
  CASCADE CONSTRAINTS; 
  CREATE TABLE Person
  (
    Per_ID integer,			/*Surrogate key for Person*/
    Per_First_name CHAR(7),		/*Lower case letters*/
    Per_Last_name CHAR(8),		/*lower case letters*/
    Per_First_name_cap CHAR(7),  /*searched in upper case*/
    Per_Last_name_cap CHAR(8),	/*searched in upper case*/
    Per_Title CHAR(5),
    Per_Address VARCHAR(120), /*uses original case*/
    Per_Postcode CHAR(6), 
    Per_Dob DATE,
    Per_lastupdated DATE, /*last update for Person*/
    CONSTRAINT Per_pk PRIMARY KEY (Per_ID)
    );
    

    DROP TABLE Character
    CASCADE CONSTRAINTS; 
    CREATE TABLE Character
    (
      Char_ID integer,		/*Surrogate key for Character*/
      Char_First_name CHAR(5),	/*lower case letters*/
      Char_Last_name CHAR(4),	/*lower case letters*/
      Char_First_name_cap CHAR(5), /*searched in upper case letters*/
      Char_Last_name_cap CHAR(4),  /*searched in upper case letters*/
      Char_Description CHAR(6), /*default as char 6*/
      Char_lastipdated DATE,		/*Last update for Character*/
      CONSTRAINT Char_pk PRIMARY KEY (Char_ID)
      );
      
/*All link tables need to have cascade constraints.
Cascade constraints are needed to delete foreign keys when dropping
tables within the database or script. I have been able to reference this from
http://www.geekinterview.com/question_details/3612*/
      

      DROP TABLE Written_by
      CASCADE CONSTRAINTS; 
      CREATE TABLE Written_by
      (
        Per_id integer,
        Prog_id integer
      );
      
      SELECT * FROM USER_TABLES
      
      DROP TABLE Directed_by
      CASCADE CONSTRAINTS;
      CREATE TABLE Directed_by
      (
        Per_id integer,
        Prog_id integer
      );
     
      
      DROP TABLE Role
      CASCADE CONSTRAINTS; 
      CREATE TABLE Role
      (
        Per_id integer,
        Prog_id integer,
        Char_id integer
      );
  
      
  /*Floats are great for precision within the Time Slot tables and I have 
  referenced this datatype from the Oracle website, it precise, as I've managed
  to show that the limit for the TIME floar is 5 rather than 3 or 4. 
  http://docs.oracle.com/javadb/10.8.2.2/ref/rrefsqlj27281.html*/
  
      DROP TABLE Time_Slot
      CASCADE CONSTRAINTS; 
      CREATE TABLE Time_Slot
      (
        Chan_id integer,
        Prog_id integer,
        Start_time float(5), /*floats have been assigned as a datatype 
        because it allows all numbers to be shown in a decimal format and is
        great for presenting time. For example- 1.30 or 13.30*/
        End_time float(5)
      );  */ 
      
      
      /*This Script includes data insertions and testing all constraints and data etc
need to be conducted within my database. I have been able to reference my data 
inserts from http://www.w3schools.com/sql/sql_insert.asp*/

/*I have been able to reference my date datatypes from the Oracle Website
http://docs.oracle.com/cd/B19306_01/server.102/b14225/ch4datetime.htm*/

/*Adding Data to Multiplex table, I have at least 4 pieces of data*/

INSERT INTO MULTIPLEX (Mult_Id,Mult_name) 
VALUES(1, 'Multiplexer');/*I managed to test out my data with these features
now need to create an update statement*/

Purge recyclebin;

SELECT * FROM USER_CONSTRAINTS

INSERT INTO MULTIPLEX (Mult_Id,Mult_name,Mult_Frequency,)
VALUES(2,'MultiPLX',5,); /* there were faults and errors but I might just leave
some nulls within the table, to show that there are null within my database.*/

INSERT INTO MULTIPLEX (Mult_Id,Mult_name,Mult_Frequency, Mult_lastupdate)
VALUES(4, 'MultiMax',9,DATE '2012-09-09'); /*now have grasped the data insert
for the next section of this table*/

INSERT INTO MULTIPLEX (Mult_Id,Mult_name,Mult_Frequency,Mult_lastupdate)
VALUES (6, 'MULTIPLEXI', 8, DATE '2012-08-09'); /*Now the data should be shown
in the multiplex table, as the other two sections have data set to null*/

/*Now I will use the same concept and see if this could work for the Program 
Table- This also has same amount of data, as used in Multiplex table*/

INSERT INTO Program (Prog_ID,Prog_Title,Prog_Genre,Prog_language,
Prog_Description, Prog_HD, Chan_ID, Prog_Type, Prog_Made, Prog_REPEAT_PERIOD,
Prog_lastupdated)

VALUES (1, 'STAR TREK', 'SCIFI', 'ENGLISH','Space', 'NO' ,a , 'Sci', 
Date'1966-08-19', 2, date '2012-08-19'); 
/*I managed to look at the IMDB website to get more information about this 
program, http://www.imdb.co.uk/title/tt0060028/
Show mean TV series or program in American English as it was used in may 
examples based on STAR TREK. STAR TREK is also know as STAR TREK TOS (TOS is 
short for The Original Series)*/

INSERT INTO Program (Prog_ID,Prog_Title,Prog_Genre,Prog_language,
Prog_Description, Prog_HD, Chan_ID, Prog_Type, Prog_Made, Prog_REPEAT_PERIOD,
Prog_lastupdated)

VALUES (1, 'The Saint', 'Crime', 'ENGLISH', 'Action', 'NO', 2, 'TV',
Date'1962-09-12', 3, Date '2012-08-20');

/*I was able to look at The Saint details on the IMDB website
http://www.imdb.co.uk/title/tt0055701/?ref_=sr_2*/


INSERT INTO Program (Prog_ID,Prog_Title,Prog_Genre,Prog_language,
Prog_Description, Prog_HD, Chan_ID, Prog_Type, Prog_Made, Prog_REPEAT_PERIOD,
Prog_lastupdated)

VALUES (3, 'Homeland', 'Drama', 'ENGLISH', 'War', 'NO', 5, 'Series',
Date'2011-09-12', 3, Date '2012-07-10');

/*I was able to create some data for Homeland TV Series. This Program relates
to a War Drama based on a soldier in the US Army during the Iraq War, this
detail or information is shown on the IMDB website.
http://www.imdb.co.uk/title/tt1796960/*/


INSERT INTO Program (Prog_ID,Prog_Title,Prog_Genre,Prog_language,
Prog_Description, Prog_HD, Chan_ID, Prog_Type, Prog_Made, Prog_REPEAT_PERIOD,
Prog_lastupdated)

VALUES (4, 'DALLAS', 'Drama', 'ENGLISH', 'Family', 'NO', 26, 'TELE',
Date'2012-09-12', 5, Date '2012-10-10');

/*Dallas is related to the continuation or remake series of the iconic soap 
opera originaly made in the 1970's. I was able to reference my information off
http://www.imdb.co.uk/title/tt1723760/?ref_=sr_2*/

INSERT INTO Person(Per_ID, Per_First_name, Per_Last_name, Per_First_name_cap, 
Per_Last_name_cap, Per_Title, Per_Address,Per_Postcode, Per_Dob,
Per_lastupdated)

VALUES (16, 'willams', 'shatner', 'WILLIAM', 'SHATNER', 'hi', 'Montreal', 
'H1A', date '1931-03-22', Date '2013-03-03');

/* I have been able to get most of my information about William Shatner from
http://www.imdb.com/name/nm0000638/ and was able to find out he grew up in 
Montreal Canada, which has been represented above as well as using a Postal Code
that related to that particular city in Canada, note I've used examples from the
website: http://www.zip-codes.com/canadian/city.asp?city=montreal&province=qc*/

INSERT INTO Person (Per_ID, Per_First_name, Per_Last_name, Per_First_name_cap, 
Per_Last_name_cap, Per_Title, Per_Address,Per_Postcode, Per_Dob,
Per_lastupdated)

VALUES (2, 'roger', 'moore','ROGER','MOORE','SIR', 'London', 'SW9',
Date '1927-10-14', Date '2013-03-03');

/*I was able to look at the IMDB Website for information about SIR Roger
Moore, as I am applying each person to the actors with programs used in the
database. I was able to find the postal code section of the address by default
via this website http://www.imdb.com/name/nm0000549/?ref_=sr_1*/

INSERT INTO Person (Per_ID, Per_First_name, Per_Last_name, Per_First_name_cap, 
Per_Last_name_cap, Per_Title, Per_Address,Per_Postcode, Per_Dob,
Per_lastupdated)

VALUES (3, 'damien', 'lewis','DAMIEN','LEWIS','MR', 'London', 'NW8',
Date '1971-02-11', Date '2013-03-03');

/*I was able to get information about Damien Lewis, as he is an actor, which
had starred in Homeland and was able to find out my data from theb IMDB website
http://www.imdb.com/name/nm0507073/, plus I've been able to but a North
West London Postcode for this person, as its NW and this is different to
Roger Moore, which has been addressed as South West London (SW), I  was able to 
look at this website for postal code variations
http://www.britishpostcodes.info/area/sw*/

INSERT INTO Person (Per_ID, Per_First_name, Per_Last_name, Per_First_name_cap, 
Per_Last_name_cap, Per_Title, Per_Address,Per_Postcode, Per_Dob,
Per_lastupdated)

VALUES(4, 'jesse', 'metcalfe', 'JESSE', 'METCALFE', 'MR', 'Los Angeles',
'90002', DATE '1978-12-09', Date '2013-03-03');

/*I was able to look at IMDB for more information about this person and also
he was in the TV Series DALLAS playing as Christopher Ewing, Son of Robert Ewing
http://www.imdb.com/name/nm0582462/, I was also able to look at US Zipcodes, 
as that is the postcode that is only used in the US and is referenced from this
site:http://losangeles.areaconnect.com/zip2.htm?city=Los%20Angeles*/

INSERT INTO CHANNEL(Chan_ID,Chan_name,Chan_number,Chan_description,
Mult_Id,Chan_lastupdated)

Values(1, 'NBC', 12, 'USA', 1, Date '2013-03-04');

/*Star Trek is orginally shown on NBC and has been previewed again on the same
TV channel within the US and presented on BBC during the 1970's and now shown
on Sky Channel CBS Action, so I managed to display the original channel on the 
database, http://www.imdb.com/title/tt0060028/*/


INSERT INTO CHANNEL(Chan_ID,Chan_name,Chan_number,Chan_description,
Mult_Id,Chan_lastupdated)

VALUES(2,'ITV', 3, 'UK', 2, Date '2013-03-04');

/*The Saint was orginally on the TV during 1962 to 1969, as it was
shown on ITV and now is shown again recently based on this website
http://www.screenonline.org.uk/tv/id/508296/index.html*/


INSERT INTO CHANNEL(Chan_ID,Chan_name,Chan_number,Chan_description,
Mult_Id,Chan_lastupdated)

VALUES(3,'SHOW', 5, 'USA', 3, DATE '2012-10-06');

/*I was able to research that Homeland was orignally shown in the US before UK
and have found this information with this website
http://www.sho.com/sho/homeland/home, in the UK it is shown on Channel 4 and has 
been nominated awards for best drama TV series*/


INSERT INTO CHANNEL(Chan_ID,Chan_name,Chan_number,Chan_description,
Mult_Id,Chan_lastupdated)

VALUES (4,'TNT', 6, 'USA', 4, DATE '2013-02-12');

/*I have been able to research that Dallas is shown in the US on TNT
Channel, which is a US equivalent of Channel 5 
(http://www.tntdrama.com/series/dallas/, this is also shown on Channel 5 in the
UK, http://www.channel5.com/shows/dallas */

INSERT INTO Episode(Ep_ID, Ep_Season, Ep_Title,
Ep_Date,prog_id)

VALUES (1,1,'ARENA',DATE'1967-01-19',1);
/* This was referenced from http://www.imdb.co.uk/title/tt0708418/, as
this episode was originally shown in 1967 not in 2013, this is an episode within
series 1 of Star Trek*/

INSERT INTO Episode(Ep_ID, Ep_Season, Ep_Title,
Ep_Date, Prog_ID)

VALUES (2,2,'ISIS', DATE '1963-11-07',2);
/*This has been referenced from the IMDB website
http://www.imdb.com/title/tt0693484/, this was originally aired in 1963
and was sited in the IMDB website.*/

INSERT INTO Episode(Ep_ID, Ep_Season, Ep_Title,
Ep_Date, Prog_ID)

VALUES(5,2,'FAlSE',DATE'2013-02-11',3);

/*Orignally called False Convictions from the season 2 of DALLAS
and has been cited from http://www.imdb.com/title/tt2492970/*/

INSERT INTO Episode(Ep_ID, Ep_Season, Ep_Title,
Ep_Date, Prog_ID)

Values(4,1,'GRACE', DATE '2011-10-09', 4);

/*Referenced from the IMDB website, which relates to an episode in Season 1
of Homeland http://www.imdb.com/title/tt1988308/?ref_=fn_al_tt_1*/

INSERT INTO Character (Char_ID, Char_First_name, Char_Last_name, 
Char_First_name_cap, Char_Last_name_cap, Char_Description,Char_lastipdated)

VALUES(1,'james', 'kirk', 'JAMES', 'KIRK','Capt', DATE'2013-03-04');

/*information about Captain Kirk has been found on the IMDB website
http://www.imdb.com/character/ch0001448/?ref_=fn_al_ch_1*/


INSERT INTO Character (Char_ID, Char_First_name, Char_Last_name, 
Char_First_name_cap, Char_Last_name_cap, Char_Description,Char_lastipdated)

VALUES(2,'simon', 'temp', 'SIMON', 'TEMP', 'Saint', Date '2013-03-04');

/*I have been able to find information about this character on IMDB website
note that Temp is supposed to be Templar, as the whole name should be Simon
Templar*/


INSERT INTO Character (Char_ID, Char_First_name, Char_Last_name, 
Char_First_name_cap, Char_Last_name_cap, Char_Description,Char_lastipdated)

VALUES(3,'nick','brod', 'NICK', 'BROD', 'SGT', DATE '2012-11-10');

/*I have been able to find out that Nick Brod should acutually be Nick
Brody from Homeland, he is a Sergant from the US Army, which indicated SGT
as the description.
http://www.imdb.com/character/ch0265411/?ref_=tt_cl_t1*/

INSERT INTO Character (Char_ID, Char_First_name, Char_Last_name, 
Char_First_name_cap, Char_Last_name_cap, Char_Description,Char_lastipdated)

VALUES(4,'chris','ewin', 'CHRIS','EWIN', 'Dallas', Date'2013-02-25');

/*This character is Chrisopher Ewing from the TV Series Dallas 2012
I have been able to find out that he is a business owner in Dallas Texas
and is shown in the IMDB website.
http://www.imdb.com/character/ch0042111/?ref_=fn_al_ch_1*/

INSERT INTO Season(Sea_ID,Sea_Number,Sea_Date, Sea_lastupdated)

VALUES(1, 2, DATE'1966-09-08', DATE'2013-01-14');

/*Looking at the data above, I have managed to find out the dates from when the 
First Season of STAR TREK had started 
http://www.imdb.com/character/ch0042111/?ref_=fn_al_ch_1*/

INSERT INTO Season(Sea_ID,Sea_Number,Sea_Date, Sea_lastupdated)

VALUES(2,2, DATE'1966-09-19', DATE '2013-03-01');

/*I have been able to get the information from IMDB website
This is related to The Saint Season 2 collection.
http://www.imdb.com/title/tt0055701/episodes?season=2&ref_=tt_eps_sn_2*/

INSERT INTO Season(Sea_ID,Sea_Number,Sea_Date, Sea_lastupdated)

VALUES(3,1,DATE'2011-10-02', DATE'2012-10-20');

/*This is relate to Season 1 of Homeland and I have referenced this from IMDB
http://www.imdb.com/title/tt1796960/episodes?season=1&ref_=tt_eps_sn_1*/

INSERT INTO Season(Sea_ID,Sea_Number,Sea_Date, Sea_lastupdated)

VALUES(4,2, DATE'2013-01-28', Date'2013-02-10');

/*I have been able to find out about Season 2 of DALLAS 2012 on
the IMDB website, http://www.imdb.com/title/tt1723760/episodes */

INSERT INTO Directed_by(Per_id,Prog_id)

VALUES (1,1);

/*I have been able to Add values and date to the Linktable, Directed_by*/

INSERT INTO Written_by(Per_id,Prog_id)

VALUES(2,2);

/*I was able to add data to this link table and managed to reflect on 
other tables, which I have inserted data into, as its all shown above*/

INSERT INTO Role(Per_id,Prog_id, Char_id)

Values (15,3,1);

/*I was able to add one set of data for this link table and other link tables*/

INSERT INTO Time_Slot(Chan_id,Prog_id,Start_time, End_time)

Values(11111,4,13.30,14.30);

/*All data within these link tables have been shown above and 
looking at what has been done, I was able to insert one set of data
for each table. However, the time slot table only show float, as I managed
to fix this table by changing the time into floats. This would indicate
that 24 hour clock does not need am or pm, as shown 13.30 should be 1:30pm
and 14.40 should be 2:30pm*/

/*I will now try to add three more sets of data for each link table and this
is shown below, I will use the same process as used for the first sets of data*/ 

INSERT INTO Time_Slot(Chan_id,Prog_id,Start_time, End_time)

Values(2,5,18.30,19.30);

/*I have added more sets of data from the Time Slot Link table*/

INSERT INTO Time_Slot(Chan_id,Prog_id,Start_time, End_time)

Values(3,6,15.00,16.00);

INSERT INTO Time_Slot(Chan_id,Prog_id,Start_time, End_time)

Values(4,7,20.30,21.30);

/*I will be adding more data to the Role link table*/


INSERT INTO Role(Per_id,Prog_id, Char_id)

Values (4,4,2);


INSERT INTO Role(Per_id,Prog_id, Char_id)

Values (5,5,3);


INSERT INTO Role(Per_id,Prog_id, Char_id)

Values (6,6,4);

/*More data has been inserted in Written by link table*/


INSERT INTO Written_by(Per_id,Prog_id)

VALUES(3,3);


INSERT INTO Written_by(Per_id,Prog_id)

VALUES(4,4);


INSERT INTO Written_by(Per_id,Prog_id)

VALUES(5,5);

/*Now I have been able to to add data to the Directed By Link Table*/

INSERT INTO Directed_by(Per_id,Prog_id)

VALUES (2,2);

INSERT INTO Directed_by(Per_id,Prog_id)

VALUES (3,3);

INSERT INTO Directed_by(Per_id,Prog_id)

VALUES (4,4);


/*I am now need to develop triggers for my tables, as this information is shown 
http://docs.oracle.com/cd/B14117_01/server.101/b10759/statements_7004.htm,
this site is where I have referenced my work from, as Triggers are represented
below, I was able to compare, which version of triggers were needed by looking
at both website and lecture notes, which helped me understand the topic of 
triggers in SQL*/

CREATE OR REPLACE TRIGGER multiplex_trig  /*I may need to replace the trigger*/
AFTER UPDATE ON multiplex /* this will update the multplex name*/
BEGIN
  INSERT INTO CHANNEL
              (change_integer, chan_number)
  VALUES      (Chan_lastupdated, DATE'2013-02-09');
 
END;
/
Show errors   

/*I was able to look at the website and it has the same but 
in depth representation of creating/replacing triggers as shown in the lecture
note, however, I managed to reference and look at the Oracle website to help
me create the trigger shown above*/

CREATE TRIGGER multiplex_trig /*Before trigger was used in many 
examples in the Oracle website*/
BEFORE UPDATE OF Mult_Id ON multiplex /*before the update of Multiplex ID*/
BEGIN
    INSERT INTO multiplex
              (new_value, Mult_Id)
    VALUES (Mult_name, VARCHAR(40));  /*this time I have been able to use the 
    multiplex name for the value and used the value for the multiplex*/
END multiplex_trig;
/
Show errors

/* Now I will need to create another trigger and the After trigger looks like it
works well with my DB, so I create a trigger for channel, I have got my 
information about triggers on http://www.techonthenet.com/oracle/triggers/*/

CREATE OR REPLACE TRIGGER channel_trig  /*I may need to replace the trigger*/
AFTER UPDATE OF Chan_ID ON Program /* this will update the Program name*/
BEGIN
  INSERT INTO Program_table
              (change_integer, Prog_Title)
  VALUES      (Prog_lastupdated, DATE);
END;
*/
